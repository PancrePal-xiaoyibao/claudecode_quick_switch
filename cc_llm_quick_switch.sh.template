#!/bin/bash

# 定义服务商及其配置
declare -A PROVIDERS=(
    ["anyrouter"]="https://7a61fbe1b5f3.d93a09b6.top/"
    ["moonshot"]="https://api.moonshot.cn/anthropic"
    ["glm"]="https://open.bigmodel.cn/api/anthropic"
    ["siliconflow"]="https://api.siliconflow.cn/"
    ["dashscope"]="https://dashscope.aliyuncs.com/apps/anthropic"
    ["iflow"]="https://apis.iflow.cn/v1/chat/completions"
)

# 定义服务商对应的认证令牌（请替换为你的密钥）
declare -A AUTH_TOKENS=(
    ["anyrouter"]="your-anyrouter-key-here"
    ["moonshot"]="your-moonshot-key-here"
    ["glm"]="your-glm-key-here"
    ["siliconflow"]="your-siliconflow-key-here"
    ["dashscope"]="your-dashscope-key-here"
    ["iflow"]="your-iflow-key-here"
)

# 定义每个服务商支持的模型
declare -A ANYROUTER_MODELS=(
    ["default"]="claude-sonnet-4-20250514"
    ["advanced"]="claude-3-7-sonnet-20250219"
    ["enhanced"]="claude-sonnet-4-5-20250929"
    ["haiku"]="claude-3-5-haiku-20241022"
    ["sonnet"]="claude-3-5-sonnet-20241022"
)

declare -A MOONSHOT_MODELS=(
    ["default"]="kimi-k2-0711-preview"
)

declare -A GLM_MODELS=(
    ["haiku"]="glm-4.5-air"     # ANTHROPIC_DEFAULT_HAIKU_MODEL
    ["sonnet"]="glm-4.5"        # ANTHROPIC_DEFAULT_SONNET_MODEL
    ["opus"]="glm-4.5"          # ANTHROPIC_DEFAULT_OPUS_MODEL
    ["default"]="glm-4.5"       # 默认使用 sonnet 模型
)

declare -A SILICONFLOW_MODELS=(
    ["default"]="moonshotai/Kimi-K2-Instruct"
)

# DashScope（阿里云百炼）模型
declare -A DASHSCOPE_MODELS=(
    ["default"]="qwen-plus"
    ["fast"]="qwen-flash"
)

# iflow 模型
declare -A IFLOW_MODELS=(
    ["default"]="glm-4.6"
    ["sonnet"]="deepseek-v3.1"
    ["haiku"]="kimi-k2-0905"
    ["opus"]="qwen3-coder-plus"
)

# 当前服务商
CURRENT_PROVIDER="anyrouter"

# 切换服务商的函数
# 功能：切换到指定服务商，设置该服务商的 API 地址和认证令牌，并应用其默认模型到环境变量。
# 参数：$1 服务商名称（anyrouter | moonshot | glm | siliconflow | dashscope）。
# 返回值：无（通过导出环境变量生效）。
# 异常处理：当传入的服务商不存在时，打印错误信息并列出可用的服务商，不修改当前环境变量。
switch_provider() {
    local provider=$1
    if [[ -n "${PROVIDERS[$provider]}" ]]; then
        CURRENT_PROVIDER=$provider
        export ANTHROPIC_BASE_URL="${PROVIDERS[$provider]}"
        export ANTHROPIC_AUTH_TOKEN="${AUTH_TOKENS[$provider]}"
        echo "已切换到服务商: $provider"
        echo "Base URL: ${PROVIDERS[$provider]}"
        
        # 设置默认模型
        case $provider in
            "anyrouter")
                export ANTHROPIC_MODEL="${ANYROUTER_MODELS[default]}"
                ;;
            "moonshot")
                export ANTHROPIC_MODEL="${MOONSHOT_MODELS[default]}"
                ;;
            "glm")
                export ANTHROPIC_MODEL="${GLM_MODELS[default]}"
                ;;
            "siliconflow")
                export ANTHROPIC_MODEL="${SILICONFLOW_MODELS[default]}"
                ;;
            "dashscope")
                export ANTHROPIC_MODEL="${DASHSCOPE_MODELS[default]}"
                ;;
            "iflow")
                export ANTHROPIC_MODEL="${IFLOW_MODELS[default]}"
                ;;
        esac
        echo "当前模型: $ANTHROPIC_MODEL"
    else
        echo "错误: 未找到服务商 '$provider'"
        echo "可用的服务商: anyrouter moonshot glm siliconflow dashscope iflow"
    fi
}

# 切换模型的函数
# 功能：在当前服务商下，根据传入的模型键切换到对应的具体模型，并更新 ANTHROPIC_MODEL。
# 参数：$1 模型键（如 default | haiku | sonnet | opus | advanced | enhanced | fast）。
# 返回值：无（通过导出环境变量生效）。
# 异常处理：当模型键在当前服务商下不存在时，打印错误信息并列出可用的模型，不修改当前环境变量。
switch_model() {
    local model_key=$1
    
    case $CURRENT_PROVIDER in
        "anyrouter")
            if [[ -n "${ANYROUTER_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${ANYROUTER_MODELS[$model_key]}"
                echo "已切换到模型: ${ANYROUTER_MODELS[$model_key]}"
            else
                echo "错误: 在 anyrouter 中未找到模型 '$model_key'"
                echo "可用的模型: default advanced enhanced haiku sonnet"
            fi
            ;;
        "moonshot")
            if [[ -n "${MOONSHOT_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${MOONSHOT_MODELS[$model_key]}"
                echo "已切换到模型: ${MOONSHOT_MODELS[$model_key]}"
            else
                echo "错误: 在 moonshot 中未找到模型 '$model_key'"
                echo "可用的模型: default"
            fi
            ;;
        "glm")
            if [[ -n "${GLM_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${GLM_MODELS[$model_key]}"
                echo "已切换到模型: ${GLM_MODELS[$model_key]}"
            else
                echo "错误: 在 glm 中未找到模型 '$model_key'"
                echo "可用的模型: haiku sonnet opus default"
            fi
            ;;
        "siliconflow")
            if [[ -n "${SILICONFLOW_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${SILICONFLOW_MODELS[$model_key]}"
                echo "已切换到模型: ${SILICONFLOW_MODELS[$model_key]}"
            else
                echo "错误: 在 siliconflow 中未找到模型 '$model_key'"
                echo "可用的模型: default"
            fi
            ;;
        "dashscope")
            if [[ -n "${DASHSCOPE_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${DASHSCOPE_MODELS[$model_key]}"
                echo "已切换到模型: ${DASHSCOPE_MODELS[$model_key]}"
            else
                echo "错误: 在 dashscope 中未找到模型 '$model_key'"
                echo "可用的模型: default fast"
            fi
            ;;
        "iflow")
            if [[ -n "${IFLOW_MODELS[$model_key]}" ]]; then
                export ANTHROPIC_MODEL="${IFLOW_MODELS[$model_key]}"
                echo "已切换到模型: ${IFLOW_MODELS[$model_key]}"
            else
                echo "错误: 在 iflow 中未找到模型 '$model_key'"
                echo "可用的模型: default sonnet haiku opus"
            fi
            ;;
    esac
}

# 显示当前服务商的所有可用模型
# 功能：打印当前服务商支持的所有模型键及对应的具体模型名称，便于选择。
# 参数：无。
# 返回值：无（输出到终端）。
# 异常处理：无，根据当前服务商分支打印已定义的模型列表。
show_models() {
    echo "当前服务商 ($CURRENT_PROVIDER) 可用的模型："
    case $CURRENT_PROVIDER in
        "anyrouter")
            echo "- default: ${ANYROUTER_MODELS[default]}"
            echo "- advanced: ${ANYROUTER_MODELS[advanced]}"
            echo "- enhanced: ${ANYROUTER_MODELS[enhanced]}"
            echo "- haiku: ${ANYROUTER_MODELS[haiku]}"
            echo "- sonnet: ${ANYROUTER_MODELS[sonnet]}"
            ;;
        "moonshot")
            echo "- default: ${MOONSHOT_MODELS[default]}"
            ;;
        "glm")
            echo "- haiku: ${GLM_MODELS[haiku]}"
            echo "- opus: ${GLM_MODELS[opus]}"
            echo "- default: ${GLM_MODELS[default]}"
            ;;
        "siliconflow")
            echo "- default: ${SILICONFLOW_MODELS[default]}"
            ;;
        "dashscope")
            echo "- default: ${DASHSCOPE_MODELS[default]}"
            echo "- fast: ${DASHSCOPE_MODELS[fast]}"
            ;;
        "iflow")
            echo "- default: ${IFLOW_MODELS[default]}"
            echo "- sonnet: ${IFLOW_MODELS[sonnet]}"
            echo "- haiku: ${IFLOW_MODELS[haiku]}"
            echo "- opus: ${IFLOW_MODELS[opus]}"
            ;;
    esac
}

# 初始化设置（使用默认服务商）
switch_provider "anyrouter"

# 打印使用说明
echo
echo "使用方法:"
echo "1. 切换服务商: switch_provider <服务商名称>"
echo "   可用的服务商: anyrouter, moonshot, glm, siliconflow, dashscope, iflow"
echo
echo "2. 切换模型: switch_model <模型名称>"
echo "   使用 show_models 命令查看当前服务商支持的模型"
echo
echo "3. 显示当前服务商的模型: show_models"